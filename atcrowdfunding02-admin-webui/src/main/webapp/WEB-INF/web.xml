<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!--  负责加载 IOC AOP 和映射mapper 文件  -->

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring-*</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!--  配置字符集过滤器
            字符过滤器必须在其他过滤器前面
            因为request.setCharacterEncoding 必须在所有方法之前
    -->
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceRequestEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>forceResponseEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--配置前端控制器-->
    <servlet>
        <servlet-name>DispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>

        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-web-mvc.xml</param-value>
        </init-param>
        <!--
            servlet默认声明周期中创建对象是在第一次接收到请求时
            而DispatcherServlet有初始化操作
            不适合在第一次请求来做
            设置Load-on-startup 来让servlet在web启动时创建
        -->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>DispatcherServlet</servlet-name>
        <!--
        第一种配置方法 <url-pattern>/</url-pattern>
        -->
        <!--
            第二种配置方法
              好处1. 不用处理静态文件 png,css,js 等
              好处2. 可以造成伪静态
                给黑客入侵增加难度
                有利于SEO优化,让百度,谷歌的搜索引擎更容易找到我们的项目
              缺点
                 不符合REST风格
        -->
        <url-pattern>*.html</url-pattern>
        <!--    如果ajax扩展名是html实际返回的是json数据会报406异常    -->
        <url-pattern>*.json</url-pattern>
    </servlet-mapping>
</web-app>